{% macro skill(label) %}
{% set colors = ['success', 'info', 'warning', 'danger', ''] %}
	<span class="mr-2 mb-2 d-inline-flex px-2 py-1 rounded text-{{ colors[random(0, colors|length - 1)] }} theme-bg-light">{{ label }}</span>
{% endmacro %}

{% macro bookmark_button(job, icon = true) %}
	{# icon = true|false permet d'afficher le bouton en icon simple ou en bouton #}
	{% if is_granted('JOB_CAN_BOOKMARK', job) %}
		{% set bookmarked = job.isBookmarkedByUser(app.user) %}
		{% set route = path('app_front_job_bookmark', {id: job.id}) %}
		{% set user = app.user.id %}
		{% set job = job.id %}
	    {# <span {{ react_component('BookmarkButton', {job, bookmarked, route, user, icon}) }}></span> #}
        {# <bookmark-button
            data-bookmarked="{{ bookmarked }}"
            data-user="{{ user }}"
            data-job="{{ job }}"
            data-icon="{{ icon }}"
            data-route="{{ route }}"
        ></bookmark-button> #}
        <span
            {{ stimulus_controller('bookmark', {bookmarked, route, user, job}, {bookmarked: 'bookmarked'}) }}
            {{ stimulus_action('bookmark', 'toggle', 'click') }}
            class="p-2 border circle d-flex align-items-center justify-content-center bg-white"
            style="cursor: pointer;"
            >
            <i class="fa fa-heart" ></i>
        </span>
	{% endif %}
{% endmacro %}

{% macro apply_button(job) %}
	{% if app.user %}
		{% set applied = job.isAppliedByUser(app.user) %}
		<div class="jbl_button mb-2">
			<a href="#" class="btn btn-sm rounded {{ applied ? 'bg-warning text-white disabled' : 'theme-bg-light theme-cl' }} fs-sm ft-medium" {% if not applied %} data-toggle="modal" data-target="#apply-form" {% endif %}>
			{% if applied %}
			<i class="lni lni-check"></i> {{ 'ui.buttons.applied'|trans }}
			{% else %}
			{{ 'ui.buttons.can_apply'|trans }}
			{% endif %}
			</a>
		</div>
	{% endif %}
{% endmacro %}
